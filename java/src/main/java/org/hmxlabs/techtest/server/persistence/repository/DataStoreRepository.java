package org.hmxlabs.techtest.server.persistence.repository;

import java.util.List;
import java.util.Optional;

import org.hmxlabs.techtest.server.persistence.BlockTypeEnum;
import org.hmxlabs.techtest.server.persistence.model.DataBodyEntity;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Repository;

/**
 * Handles all direct interaction with the database's DataBody table
 */
@Repository
public interface DataStoreRepository extends JpaRepository<DataBodyEntity, Long> {
    /**
     * This method is generated by Spring at compile time.
     * The method name tells Spring to match the BlockType within the DataHeaderEntity referenced by the DataBlockEntity.
     * @param type - the type all retrieved datas should have.
     * @return a list of all DataBlockEntities with the provided type.
     */
    List<DataBodyEntity> findByDataHeaderEntity_Blocktype(BlockTypeEnum type);

    /**
     * This method is generated by Spring at compile time.
     * The method name tells Spring to match the name within the DataHeaderEntity referenced by the DataBlockEntity.
     * Since the name is unique, it will only return 1 or 0 entries, hence an Optional<> return type.
     * 
     * @param name - the name of the data to retrieve.
     * @return a Optional<> containing the DataBlockEntity with the provided name.
     */
    Optional<DataBodyEntity> findByDataHeaderEntity_Name(String blockName);
}
